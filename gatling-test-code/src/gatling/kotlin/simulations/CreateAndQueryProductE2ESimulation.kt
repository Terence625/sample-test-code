package simulations

import io.gatling.javaapi.core.*
import io.gatling.javaapi.core.CoreDsl.*
import request.httpProtocol
import request.httpRequests.CreateProduct
import request.httpRequests.QueryProductDetail
import java.io.File

class CreateAndQueryProductE2ESimulation : Simulation() {

  private val createProductRequestBody: String =
    File("src/gatling/resources/data/createProductRequestBody.json").readText()

  private val createProductRequest = CreateProduct(createProductRequestBody)
  private val queryProductDetailRequest = QueryProductDetail()

  //This scenario is to conduct load test on an e2e workflow of creating product and query product detail
  //use .group to group these 2 apis and export their response time together
  //query product detail require the productId generated by create product
  private val scn = scenario("create product and query product detail e2e load test")
    .group("createProduct and queryProductDetail group")
    .on(exec { session -> createProductRequest.setSessionData(session) }
      .exec(createProductRequest.request)
      .doWhile { session -> session.getString("resultCode") != "0" }
      .on(exec { session -> queryProductDetailRequest.setSessionData(session) }.exec(
          queryProductDetailRequest.request
        )))

  //open model, inject 100 users distributed evenly during 5 seconds
  init {
    setUp(
      scn.injectOpen(rampUsers(100).during(5)).protocols(httpProtocol())
    )
  }
}
